#!/usr/bin/ruby1.9.1
# coding: utf-8
# apt-get install libole-ruby or gem install ruby-ole
# 한글과컴퓨터의 글 문서 파일(.hwp) 공개 문서를 참고하여 개발하였습니다.

require 'optparse'

begin
    require 'hwp'
rescue Exception
    $LOAD_PATH << File.expand_path(File.dirname(__FILE__)) + '/../lib'
    require 'hwp'
end

require 'pango'
require 'cairo'

opts = {}
op = OptionParser.new do |op|
    #op.banner = "Usage: hwp2txt [OPTION] [FILE]"
    op.banner = "Usage: hwp2pdf [OPTION] [FILE]"
    op.separator ' '
    #op.separator "Output control:"
    op.on('-o', '--output=FILE', 'output file') { opts[:action] = :output }
    #op.separator ''
    op.on_tail('-h', '--help', 'Show this message') { puts op; exit }
end

files = op.parse ARGV

if files.empty?
    puts 'Must specify 1 .hwp file.'
    puts op
    exit 1
end

doc = HWP.open files[0]

# PAGE SIZE
# 1 point = size[mm] * 72.0 / 25.4
# 1 mm =    size[point] / 72.0 * 25.4
# Letter        612 * 792
# LetterSmall   612 * 792
# Tabloid       792 * 1224
# Ledger       1224 * 792
# Legal         612 * 1008
# Statement     396 * 612
# Executive     540 * 720
# A0           2384 * 3371
# A1           1685 * 2384
# A2           1190 * 1684
# A3            842 * 1190
# A4            595 * 842
# A4Small       595 * 842
# A5            420 * 595
# B4            729 * 1032
# B5            516 * 729
# Envelope      ??? * ???
# Folio         612 * 936
# Quarto        610 * 780
# 10x14         720 * 1008

section_def = doc.body_text.para_headers[0].ctrl_headers[0].section_defs[0]
page_def = section_def.page_defs[0]

surface = Cairo::PDFSurface.new("/tmp/out.pdf",
    page_def.width / 100.0, page_def.height / 100.0)

cr = Cairo::Context.new(surface)
doc.render cr

# page render
(doc.n_pages+1).times do |n|
    x = page_def.left_margin / 100.0
    y = (page_def.top_margin + page_def.header_margin) / 100.0
    layouts = doc.get_pages(n)
    layouts.each do |layout|
        cr.move_to(x, y)
        cr.show_pango_layout(layout)
        y += layout.size[1] / 1000.0
    end
    cr.show_page
end

surface.finish

doc.close

`evince /tmp/out.pdf`
