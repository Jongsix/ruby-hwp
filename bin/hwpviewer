#!/usr/bin/ruby1.9.1
# coding: utf-8
# 한글과컴퓨터의 글 문서 파일(.hwp) 공개 문서를 참고하여 개발하였습니다.

require 'optparse'
require 'hwp'
require 'gtk2'

def process filename
	@textview = Gtk::TextView.new
	@textview.wrap_mode = Gtk::TextTag::WRAP_WORD
	@textview.editable = false

	hwp = HWP.open filename
	@textview.buffer.text = ''
	# TODO 기존의 태그 삭제

	hwp.doc_info.char_shapes.each_with_index do |char_shape, i|
		# FIXME tag name
		@textview.buffer.create_tag(i.to_s,
			'size' => char_shape.size/100 * Pango::SCALE)
	end

	iter = @textview.buffer.start_iter

	hwp.bodytext.para_headers.each do |para_header|
		# m_pos, m_id 적용시키는 코드이다. 개선할 필요가 있다.
		# text == nil 인 경우가 있는데, 확인이 필요하다. para break??
		if para_header.para_char_shape.m_pos.length == 1
			@textview.buffer.insert(iter, para_header.para_text.to_s+"\n", para_header.para_char_shape.m_id[0].to_s)
		elsif para_header.para_char_shape.m_pos.length > 1
			prev_pos = para_header.para_char_shape.m_pos[0]

			texts = []
			para_header.para_char_shape.m_pos.each_with_index do |pos, i|
				if i > 0
					texts << para_header.para_text.to_s[prev_pos...pos]
				end
				prev_pos = pos
			end

			if prev_pos < para_header.para_text.to_s.length
				texts << para_header.para_text.to_s[prev_pos..-1]
			end

			texts.each_with_index do |text, i|
				if i == texts.length - 1
					@textview.buffer.insert(iter, text+"\n", para_header.para_char_shape.m_id[i].to_s) if text
				else
					@textview.buffer.insert(iter, text, para_header.para_char_shape.m_id[i].to_s) if text
				end
			end # if
		end # if

		if para_header.table
			gtk_table = Gtk::Table.new(para_header.table.rows.length, para_header.table.rows[0].cells.length)
			para_header.table.rows.each_with_index do |row, row_index|
				row.cells.each_with_index do |cell, cell_index|
					table_textview = Gtk::TextView.new
					table_textview.set_border_window_size(Gtk::TextView::WINDOW_LEFT || Gtk::TextView::WINDOW_RIGHT,3)
					cell.para_headers.each do |para_header|
						table_textview.buffer.text += para_header.para_text.to_s+"\n"
					end
					gtk_table.attach_defaults(table_textview, cell_index, cell_index+cell.col_span, row_index, row_index+cell.row_span)
				end
			end
			anchor = @textview.buffer.create_child_anchor(iter)
			@textview.add_child_at_anchor(gtk_table, anchor)
			@textview.buffer.insert(iter, "\n")
		end
	end
	@scrolled_w = Gtk::ScrolledWindow.new
	@scrolled_w.set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC)
	@scrolled_w.add(@textview)
	@scrolled_w.show_all
	button = Gtk::Button.new "Close"
	button.signal_connect("clicked") do
		@notebook.remove_page @notebook.page
	end
	hbox = Gtk::VBox.new(false, 2)
	hbox.pack_end(button, false, false, 0)
	hbox.add @scrolled_w
	@notebook.append_page hbox
	#@notebook.next_page
	@notebook.show_all
	hwp.close
end

def create_gui
	file_menu = Gtk::Menu.new
	help_menu = Gtk::Menu.new

	file_item = Gtk::MenuItem.new 'File'
	help_item = Gtk::MenuItem.new 'Help'

	file_item.set_submenu file_menu
	help_item.set_submenu help_menu

	open_item = Gtk::MenuItem.new 'Open'
	quit_item = Gtk::MenuItem.new 'Quit'
	about_item = Gtk::MenuItem.new 'About'

	file_menu.append open_item
	file_menu.append quit_item
	help_menu.append about_item

	menu_bar = Gtk::MenuBar.new
	menu_bar.append file_item
	menu_bar.append help_item

	quit_item.signal_connect('activate') { Gtk.main_quit }

	@w = Gtk::Window.new
	@w.title = "HWP Viewer"
	@w.set_size_request(640,400)
	@w.signal_connect('delete-event') { Gtk.main_quit }

	open_item.signal_connect('activate') do
		dialog = Gtk::FileChooserDialog.new("Open File", @w,
			Gtk::FileChooser::ACTION_OPEN,
			nil,
			[Gtk::Stock::CANCEL, Gtk::Dialog::RESPONSE_CANCEL],
			[Gtk::Stock::OPEN, Gtk::Dialog::RESPONSE_ACCEPT])

		if dialog.run == Gtk::Dialog::RESPONSE_ACCEPT
			#Thread.new { process(dialog.filename) }
			process dialog.filename
		end
		dialog.destroy
	end

	about_item.signal_connect('activate') do
		about = Gtk::AboutDialog.new
		about.program_name = "HWP Viewer"
		about.comments = "한글과컴퓨터의 글 문서 파일(.hwp) 공개 문서를 참고하여 개발하였습니다."
		about.run
		about.destroy
	end

	@vbox = Gtk::VBox.new false, 0
	@vbox.pack_start menu_bar, false, false, 0
	@notebook = Gtk::Notebook.new
	@vbox.add @notebook

	@w.add @vbox
	@w.show_all
end

op = OptionParser.new do |op|
	#op.banner = "Usage: hwpviewer [OPTION] [FILE]"
	op.banner = "Usage: hwpviewer [OPTION] [FILE]"
	#op.separator ' '
	#op.separator "Output control:"
	#op.separator ''
	op.on_tail('-h', '--help', 'Show this message') { puts op; exit }
end

opts = op.parse ARGV

if opts.empty?
	create_gui
else
	create_gui
	process opts[0]
end

Gtk.main
